{"version":3,"sources":["components/WeatherResult/WeatherResult.module.css","containers/Weather/Weather.module.css","components/NameCity/NameCity.module.css","UI/Button/Button.module.css","components/WeatherResult/WeatherIcon/WeatherIcon.module.css","components/WeatherResult/Degrees/Degrees.module.css","components/WeatherResult/Description/Description.module.css","components/WeatherResult/Error/Error.module.css","UI/Button/Button.js","components/NameCity/NameCity.js","components/WeatherResult/WeatherIcon/WeatherIcon.js","components/WeatherResult/Degrees/Degrees.js","components/WeatherResult/Description/Description.js","components/WeatherResult/WeatherResult.js","components/WeatherResult/Error/Error.js","containers/Weather/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","props","className","classes","NameCity","onSubmit","weatherMethod","name","type","placeholder","ChangeName","onClick","WeatherIcon","src","icon","Degrees","Fragment","clasess","degree","Description","feelsLike","wind","city","WeatherResult","cls","dayTime","Array","from","filter","e","console","log","day","night","Error","error","Weather","getWeather","a","target","elements","value","fetch","getData","json","data","setState","nameCity","Math","trunc","main","temp","degreeFeelsLike","feels_like","speed","weather","undefined","document","querySelector","state","checkError","this","WeatherTitle","preventDefault","React","Component","App","react","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.076f2cfc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherResult\":\"WeatherResult_WeatherResult__29SOF\",\"night\":\"WeatherResult_night__2CMux\",\"day\":\"WeatherResult_day__2_DSf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Weather\":\"Weather_Weather__fRYvm\",\"WeatherTitle\":\"Weather_WeatherTitle__2i_7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NameCity\":\"NameCity_NameCity__3jdnn\",\"ChangeName\":\"NameCity_ChangeName__3wjY3\",\"wrong\":\"NameCity_wrong__2PZ8y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1DomX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherIcon\":\"WeatherIcon_WeatherIcon__36ZCG\",\"WeatherIcon-bigger\":\"WeatherIcon_WeatherIcon-bigger__myaDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Degrees\":\"Degrees_Degrees__1aexr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Description\":\"Description_Description__2SQKg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"Error_Error__2_4pG\"};","import classes from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n    return(\r\n        <button\r\n            className={classes.Button}\r\n        >Go!</button>\r\n    )\r\n}\r\nexport default Button","import classes from './NameCity.module.css';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst NameCity = props => {\r\n    return (\r\n        <form\r\n            className={classes.NameCity}\r\n            onSubmit={props.weatherMethod}\r\n        >\r\n            <input \r\n                name='city'\r\n                type='text'\r\n                placeholder='Enter your city'\r\n                className={classes.ChangeName}\r\n            />\r\n            <Button \r\n                onClick={props.onClick}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NameCity","import classes from './WeatherIcon.module.css';\r\n\r\nconst WeatherIcon = props => {\r\n    return (\r\n        <div className={classes.WeatherIcon}>\r\n            <img src={props.icon} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherIcon;","import React from \"react\";\r\nimport clasess from './Degrees.module.css';\r\n\r\nconst Degrees = props => {\r\n    return (\r\n        <React.Fragment>\r\n            <p className={clasess.Degrees}>{props.degree}</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Degrees;","import React from \"react\";\r\nimport classes from './Description.module.css'\r\n\r\nconst Description = props => {\r\n    return (\r\n        <div\r\n            className={classes.Description}\r\n        >\r\n            <p>{props.feelsLike}</p>\r\n            <p>{props.wind}</p>\r\n            <h2>{props.city}</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Description;","import classes from './WeatherResult.module.css';\r\nimport WeatherIcon from './WeatherIcon/WeatherIcon';\r\nimport Degrees from './Degrees/Degrees';\r\nimport Description from './Description/Description';\r\n\r\nconst WeatherResult = props => {\r\n    // Провермя время суток для отображения цвета фона\r\n    let cls = classes.WeatherResult;\r\n    if (props.dayTime) {\r\n        let day = Array.from(props.dayTime)\r\n        day.filter((e)=>{\r\n            if (e === 'd') {\r\n                console.log('Day --> ', e);\r\n                cls = `${cls} ${classes.day}`\r\n            } else if (e === 'n') {\r\n                console.log('Night --> ', e)\r\n                cls = `${cls} ${classes.night}`\r\n            }\r\n        })\r\n    }\r\n    // console.log(Object.values(classes));\r\n    return (\r\n        <div className={cls} >\r\n            <Degrees \r\n                degree={props.degree}\r\n            />\r\n            <WeatherIcon \r\n                icon={props.icon}\r\n            />\r\n            <Description \r\n                city={props.city}\r\n                feelsLike={props.feelsLike}\r\n                wind={props.wind}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherResult;","import classes from './Error.module.css';\r\n// this error\r\n\r\nconst Error = (props) => {\r\n    return (\r\n        <p\r\n            className={classes.Error}\r\n        >\r\n            {props.error}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Error","import React from \"react\";\r\nimport classes from '../Weather/Weather.module.css';\r\nimport NameCity from \"../../components/NameCity/NameCity\";\r\nimport WeatherResult from \"../../components/WeatherResult/WeatherResult\";\r\nimport Error from \"../../components/WeatherResult/Error/Error\";\r\n\r\nclass Weather extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            nameCity: null,\r\n            degree: null,\r\n            degreeFeelsLike: null,\r\n            wind: null,\r\n            icon: null,\r\n            dayTime: null,\r\n            error: null\r\n        };\r\n    };\r\n    // Отправляем запрос на API сайта погоды\r\n    getWeather = async (city) => {\r\n        if (!city) {\r\n            city = 'Москва';\r\n        } else {\r\n            city = city.target.elements.city.value\r\n        }\r\n        city = city || 'Moscow'\r\n        const key = '57ad26d8d8989166f0ae73503542de6d';\r\n        const getData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${key}&units=metric&lang=ru`);\r\n        const data = await getData.json();\r\n        if (data.name) {\r\n            const changeNameCity = await this.setState({\r\n                nameCity: data.name,\r\n                degree: `${Math.trunc(data.main.temp)}°`,\r\n                degreeFeelsLike: `Ощущается как ${Math.trunc(data.main.feels_like)}°`,\r\n                wind: `Ветер ${Math.trunc(data.wind.speed)} м/сек`,\r\n                icon: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`,\r\n                dayTime: data.weather[0].icon,\r\n                error: undefined\r\n            })\r\n            document.querySelector(\"[name='city']\").value = ''\r\n            await console.log(data)\r\n            await console.log(city)\r\n            await console.log(this.state)\r\n        } else {\r\n            console.log(city)\r\n            this.setState({\r\n                error: 'Ошибка'\r\n            })\r\n            console.log('Error --> ', this.state.error)\r\n            document.querySelector(\"[name='city']\").value = ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getWeather()\r\n    }\r\n    // Вывод ошибки в приложение\r\n    checkError = (error) => {\r\n        if (error === 'Ошибка') {\r\n            console.log('Error from checkError --> ')\r\n            return <Error error={this.state.error} />\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 className={classes.WeatherTitle}>Weather in</h1>\r\n                <div className={classes.Weather}>\r\n                    <NameCity\r\n                        weatherMethod={(e)=>{\r\n                            e.preventDefault()\r\n                            this.getWeather(e)\r\n                        }}\r\n                    />\r\n                    <WeatherResult \r\n                        city={this.state.nameCity}\r\n                        degree={this.state.degree}\r\n                        feelsLike={this.state.degreeFeelsLike}\r\n                        wind={this.state.wind}\r\n                        icon={this.state.icon}\r\n                        dayTime={this.state.dayTime}\r\n                        error={this.state.error}\r\n                    />\r\n                </div>\r\n                {\r\n                    this.checkError(this.state.error)\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Weather","import react from 'react';\r\nimport './App.css';\r\nimport Weather from './containers/Weather/Weather';\r\n\r\nclass App extends react.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Weather />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}